language: cpp
dist: trusty
sudo: false
addons:
  apt:
    sources:
      - ubuntu-toolchain-r-test
      - george-edison55-precise-backports
    packages:
      - gfortran
      - libbz2-dev
      - libblas-dev
      - liblapack-dev
      - libarpack2-dev
      - libnetcdf-dev
      - libfftw3-dev
      - netcdf-bin
      - clang
      - openmpi-bin
      - openmpi-common
      - libopenmpi-dev
      - cmake-data
      - cmake
matrix:
  include:
    - { os: linux, env: COMPILER=gnu USE_CMAKE=0 BUILD_TYPE=install TEST_TYPE=test.showerrors }
    - { os: linux, compiler: clang, env: COMPILER=clang USE_CMAKE=0 BUILD_TYPE=install TEST_TYPE=test.showerrors }
    - { os: linux, env: COMPILER=gnu USE_CMAKE=0 BUILD_FLAGS="-openmp" OPT=openmp OMP_NUM_THREADS=4 BUILD_TYPE=install TEST_TYPE=test.showerrors }
    - { os: linux, env: COMPILER=gnu USE_CMAKE=0 BUILD_FLAGS="-mpi" DO_PARALLEL="mpiexec -n 2" BUILD_TYPE=install TEST_TYPE=test.showerrors }
    - { os: osx, compiler: clang, env: COMPILER=clang USE_CMAKE=0 BUILD_FLAGS="-macAccelerate --with-fftw3=/usr/local --with-netcdf=/usr/local -noarpack" BUILD_TYPE=install TEST_TYPE=test.showerrors }
    - { os: linux, env: COMPILER=gnu USE_CMAKE=0 BUILD_FLAGS="-openmp -shared -fftw3" OPT=openmp OMP_NUM_THREADS=1 BUILD_TYPE=libcpptraj TEST_TYPE=test.libcpptraj }
    - { os: linux, env: COMPILER=GNU USE_CMAKE=1 BUILD_FLAGS="-DOPENMP=TRUE" OMP_NUM_THREADS=4 OPT=openmp TEST_TYPE=test.showerrors}
    - { os: osx, osx_image: xcode9.2, env: COMPILER=CLANG USE_CMAKE=1 BUILD_FLAGS="" TEST_TYPE=test.showerrors}

#shell_session_update() { echo "Overriding shell_session_update"; };

    
before_install:
  - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then
      rm -rf '/usr/local/include/c++'
      brew tap homebrew/science;
      brew update;
      brew install netcdf fftw arpack;
      
      curl -L https://anaconda.org/AmberMD/pysander/16.0/download/osx-64/pysander-16.0-py27_1.tar.bz2 > $HOME/osx_libsander.tar.bz2;
      tar jxf $HOME/osx_libsander.tar.bz2 lib/libsander.dylib include/sander.h;
      
    else
      curl -OL https://anaconda.org/AmberMD/pysander/16.0/download/linux-64/pysander-16.0-py27_1.tar.bz2;
      tar jxf pysander-16.0-py27_1.tar.bz2 lib/libsander.so include/sander.h;
    fi
  - mv lib include $HOME

install:
  - if [ "$USE_CMAKE" == 1 ]; then
      mkdir build;
      mkdir install;   
      installdir=$(pwd);
      cd build;
      cmake .. $BUILD_FLAGS -DCOMPILER=$COMPILER -DINSTALL_HEADERS=FALSE -DCMAKE_INSTALL_PREFIX=$installdir -DCMAKE_LIBRARY_PATH=$HOME/lib -DPRINT_PACKAGING_REPORT=TRUE;
      make -j2 install;    
      cd ..
      export PATH=$installdir/bin:$PATH;
    else
      if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then
        export DYLD_FALLBACK_LIBRARY_PATH=$HOME/lib:$DYLD_FALLBACK_LIBRARY_PATH;
        ./configure $BUILD_FLAGS $COMPILER;
      else
        export LD_LIBRARY_PATH=$HOME/lib:$LD_LIBRARY_PATH;
        ./configure $BUILD_FLAGS $COMPILER;
      fi;
      make -j2 $BUILD_TYPE ;
    fi
script:
    - cd test && make $TEST_TYPE
